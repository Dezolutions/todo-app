{"version":3,"sources":["redux/todoActions.js","components/TodoItem.jsx","components/TodoList.jsx","App.js","redux/todoReducer.js","redux/store.js","index.js"],"names":["addTodo","text","type","id","Date","now","TodoItem","completed","dispatch","useDispatch","wrappedClasses","classNames","wrappedClassesTrashBtn","wrappedClassesCheckMark","className","onClick","toggleTodo","readOnly","checked","removeTodo","TodoList","todos","map","todo","App","useSelector","state","React","useState","todoTask","setTodoTask","onChange","event","target","value","onKeyPress","key","placeholder","todoReducer","action","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNACaA,EAAU,SAAAC,GAAI,MAAK,CAC9BC,KAAM,WACNC,GAAIC,KAAKC,MACTJ,S,gBC4BaK,EA3BG,SAAC,GAAyB,IAAxBL,EAAuB,EAAvBA,KAAKE,EAAkB,EAAlBA,GAAGI,EAAe,EAAfA,UACpBC,EAAWC,cAYbC,EAAiBC,IAAW,iBAAiB,CAAC,2BAA4BJ,IAC1EK,EAAwBD,IAAW,kBAAkB,CAAC,4BAA6BJ,IACnFM,EAA0BF,IAAY,kBAAmB,CAAE,0BAA2BJ,IAE1F,OACE,qBAAIO,UAAWJ,EAAgBK,QAVZ,WACnBP,EDNsB,SAAAL,GAAE,MAAK,CAC/BD,KAAM,cACNC,MCIWa,CAAWb,KASpB,UACE,uBAAOW,UAAU,qBAAsBZ,KAAK,WAAWe,UAAQ,EAACC,QAASX,IACzE,sBAAMO,UAAWD,EAAjB,SAA0C,mBAAGC,UAAU,mBACvD,mBAAGA,UAAU,iBAAb,SAA+Bb,IAC/B,wBAAQc,QAnBS,WACnBP,EDIsB,SAAAL,GAAE,MAAK,CAC/BD,KAAM,cACNC,MCNWgB,CAAWhB,KAkBaW,UAAWF,EAA1C,SAAkE,mBAAGE,UAAU,uBCZtEM,EAXE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACjB,OACE,oBAAIP,UAAU,YAAd,SACGO,EAAMC,KAAI,SAAAC,GACT,OAAO,cAAC,EAAD,eAA6BA,GAAdA,EAAKpB,UC6CpBqB,MA9Cf,WACE,IAAMhB,EAAWC,cACXY,EAAQI,aAAY,SAAAC,GAAK,OAAIA,KAFtB,EAGkBC,IAAMC,SAAS,IAHjC,mBAGNC,EAHM,KAGGC,EAHH,KA4Bb,OACE,qBAAKhB,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,oBAAIA,UAAU,mBAAd,mFAEF,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBAAOiB,SAzBQ,SAAAC,GACvBF,EAAYE,EAAMC,OAAOC,QAwBkBC,WAdtB,SAAAH,GACJ,UAAdA,EAAMI,MACP5B,EAASR,EAAQ6B,IACjBC,EAAY,MAWyDI,MAAOL,EAAU3B,KAAK,OAAOmC,YAAY,mHACxG,wBAAQtB,QApBA,WAChBP,EAASR,EAAQ6B,IACjBC,EAAY,KAkBwBhB,UAAU,eAAtC,kBAEF,cAAC,EAAD,CAAUO,MAAOA,a,yCC9CrBA,EAAQ,GA6BCiB,MA5Bf,WAA6C,IAAxBZ,EAAuB,uDAAfL,EAAOkB,EAAQ,uCAC1C,OAAQA,EAAOrC,MACb,IAAK,WACH,MAAM,GAAN,mBACKwB,GADL,CAEE,CACEvB,GAAIoC,EAAOpC,GACXF,KAAMsC,EAAOtC,KACbM,WAAW,KAIjB,IAAK,cACH,OAAOmB,EAAMJ,KAAI,SAAAC,GAAI,OACnBA,EAAKpB,KAAOoC,EAAOpC,GAAnB,2BACQoB,GADR,IACchB,WAAYgB,EAAKhB,YAC3BgB,KAGR,IAAK,cACH,OAAOG,EAAMc,QAAO,SAAAjB,GAAI,OAAIA,EAAKpB,KAAOoC,EAAOpC,MAGjD,QACE,OAAOuB,ICrBEe,EAFDC,YAAYJ,EAAYK,OAAOC,8BAAgCD,OAAOC,gCCUpFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.5dc32605.chunk.js","sourcesContent":["\r\nexport const addTodo = text => ({\r\n  type: 'ADD_TODO',\r\n  id: Date.now(),\r\n  text\r\n  \r\n})\r\n\r\nexport const toggleTodo = id => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\nexport const removeTodo = id => ({\r\n  type: 'REMOVE_TODO',\r\n  id\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { removeTodo, toggleTodo } from '../redux/todoActions'\r\nimport classNames from 'classnames'\r\n\r\nconst  TodoItem = ({text,id,completed}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onRemoveTodo = () => {\r\n    dispatch(removeTodo(id))\r\n    \r\n  }\r\n\r\n  const onToggleTodo = () => {\r\n    dispatch(toggleTodo(id))\r\n  }\r\n\r\n//классы со стилями, которые задаются или удаляется при изменении значения completed\r\n  let wrappedClasses = classNames(\"app__list-item\",{\"app__list-item-completed\": completed})\r\n  let wrappedClassesTrashBtn= classNames(\"app__btn-delete\",{\"app__btn-delete-completed\": completed})\r\n  let wrappedClassesCheckMark = classNames( \"custom-checkbox\", { \"custom-checkbox-checked\": completed})\r\n\r\n  return (\r\n    <li className={wrappedClasses} onClick={onToggleTodo}>\r\n      <input className=\"app__list-checkbox\"  type=\"checkbox\" readOnly checked={completed} />\r\n      <span className={wrappedClassesCheckMark}><i className=\"fas fa-check\"></i></span>\r\n      <p className=\"app__list-text\">{text}</p>\r\n      <button onClick={onRemoveTodo} className={wrappedClassesTrashBtn}><i className=\"fas fa-trash\"></i></button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nconst TodoList = ({todos}) => {\r\n  return (\r\n    <ul className=\"app__list\">\r\n      {todos.map(todo => {\r\n        return <TodoItem key={todo.id}  {...todo}/> \r\n      })}\r\n      \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react'\r\nimport  TodoList  from './components/TodoList'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addTodo} from './redux/todoActions'\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const todos = useSelector(state => state)\r\n  const [todoTask,setTodoTask] = React.useState('')\r\n\r\n  //При каждом изменении массива todos, сохрянаем его в localStorage\r\n  // React.useEffect(() => {\r\n  //   localStorage.setItem('todos', JSON.stringify(todos))\r\n  // },[todos])\r\n\r\n  \r\n  const onChangeTodoTask = event => {\r\n    setTodoTask(event.target.value)\r\n  }\r\n\r\n\r\n//Добавляем задачу в список, путем нажатия на определенную кнопку\r\n  const onAddTodo = () => {\r\n    dispatch(addTodo(todoTask))\r\n    setTodoTask('')\r\n  }\r\n//Добавляем задачу в список, путем нажатия кнопки Enter\r\n  const onAddTodoEnter = event => {\r\n    if(event.key === 'Enter') {\r\n      dispatch(addTodo(todoTask))\r\n      setTodoTask('')\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"app__block\">\r\n        <div className=\"app__block-header\">\r\n          <h1 className=\"app__block-title\">Список задач</h1>\r\n        </div>\r\n        <div className=\"app__main\">\r\n          <div className=\"app__main-input\">\r\n            <input onChange={onChangeTodoTask} onKeyPress={onAddTodoEnter} value={todoTask} type=\"text\" placeholder=\"Введите текст задачи\" />\r\n            <button onClick={onAddTodo} className=\"app__btn-add\">+</button>\r\n          </div>\r\n          <TodoList todos={todos} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const todos = []\r\nfunction todoReducer(state = todos, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n\r\n    case 'TOGGLE_TODO':\r\n      return state.map(todo => \r\n        todo.id === action.id\r\n          ? {...todo, completed: !todo.completed}\r\n          : todo\r\n      )\r\n\r\n    case 'REMOVE_TODO':\r\n      return state.filter(todo => todo.id !== action.id)\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todoReducer;","import {  createStore } from 'redux'\r\nimport todoReducer from './todoReducer'\r\nconst store = createStore(todoReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.scss';\r\nimport App from './App';\r\nimport '@fortawesome/fontawesome-free/js/fontawesome'\r\nimport '@fortawesome/fontawesome-free/js/solid'\r\nimport '@fortawesome/fontawesome-free/js/regular'\r\nimport '@fortawesome/fontawesome-free/js/brands'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}